rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
    	// Check for projects
      match /projects/{project} {
        function isSignedIn() {
          return request.auth != null;
        }
        
        function isOwner(resc) {
        	return isSignedIn() && resc.data.owner_id == request.auth.uid;
        }
        
        function getUserAccess(resc) {
          return resc.data.shared_access[request.auth.uid].access_type;
        }

        function isUserAuthorized(resc, array) {
          return isSignedIn() && (getUserAccess(resc) in array);
        }

        
        allow create: if isSignedIn();
        allow read: if isOwner(resource) ||
                        isUserAuthorized(resource,
                        	['READ-ONLY', 'READ-WRITE']
                        );
        allow update, delete: if isOwner(resource) ||
                          isUserAuthorized(resource,
                            ['READ-WRITE']
                          );
        
        // Check for boards
        match /boards/{board} {
        	allow read:
          	if isOwner(
                    get(/databases/$(database)/documents/projects/$(project))
                  ) ||
            	 isUserAuthorized(
               			get(/databases/$(database)/documents/projects/$(project)),
                    ['READ-ONLY', 'READ-WRITE']
                  );
        	allow create, update, delete:
          	if isOwner(
                    get(/databases/$(database)/documents/projects/$(project))
                  ) ||
            	 isUserAuthorized(
               			get(/databases/$(database)/documents/projects/$(project)),
                    ['READ-WRITE']
                  );
        }
	  }
    }
  }
}